@model Model.EF.PRODUCT_DETAIL

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Farmer/Views/Shared/_Layouts.cshtml";
}

<head>
    <title>Edit Product Details</title>
</head>

<!-- Start Reservation section -->
<section id="mu-reservation">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="mu-reservation-area">
                    <div class="mu-title">
                        <span class="mu-subtitle">Nông Sản</span>
                        <h2>CHỈNH SỬA THÔNG TIN</h2>
                        <i class="fa fa-spoon"></i>
                        <span class="mu-title-bar"></span>
                    </div>
                    @using (Html.BeginForm("Edit", "ProductDetails", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        <div class="mu-reservation-content">
                            <form class="mu-reservation-form">
                                @Html.AntiForgeryToken()
                                @Html.ValidationSummary(true, "", new { @class = "alert alert-danger", @role = "alert", @style = "text-align: center" })
                                <div class="row">

                                    @Html.HiddenFor(model => model.Id_ProductDetail)

                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.DropDownList("Id_Product", null, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Id_Product, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.DropDownList("Id_Farm", null, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Id_Farm, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.DropDownList("Id_Seed", null, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Id_Seed, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <input type="text" class="form-control" placeholder="Thổ nhưỡng" name="Geography_Location" value="@Model.Geography_Location" />
                                            @*@Html.EditorFor(model => model.Geography_Location, new { htmlAttributes = new { @class = "form-control", placeholder = "Thổ nhưỡng" } })*@
                                            @Html.ValidationMessageFor(model => model.Geography_Location, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    @*<div class="col-md-6">
                                            <div class="form-group">
                                                @Html.EditorFor(model => model.Min_Mass, new { htmlAttributes = new { @class = "form-control", placeholder = "Khối lượng bán nhỏ nhất" } })
                                                @Html.ValidationMessageFor(model => model.Min_Mass, "", new { @class = "text-danger" })
                                            </div>
                                        </div>*@
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <input type="text" class="form-control" placeholder="Tên vụ mùa" name="Name_Crop" required="" oninvalid="this.setCustomValidity('Thông tin này không được để trống')" oninput="this.setCustomValidity('')" value="@Model.Name_Crop"/>
                                            @*@Html.EditorFor(model => model.Name_Crop, new { htmlAttributes = new { @class = "form-control", placeholder = "Tên vụ mùa" } })*@
                                            @Html.ValidationMessageFor(model => model.Name_Crop, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <input type="text" class="form-control" placeholder="Thời điểm bắt đầu vụ mùa: tháng/ngày/năm" name="Start_Time" required="" oninvalid="this.setCustomValidity('Thông tin này không được để trống')" oninput="this.setCustomValidity('')" value="@Model.Start_Time" />
                                            @*@Html.EditorFor(model => model.Start_Time, new { htmlAttributes = new { @class = "form-control", @type = "datetime", @title = "Thời điểm bắt đầu vụ mùa", placeholder = "Thời điểm bắt đầu vụ mùa: tháng/ngày/năm" } })*@
                                            @Html.ValidationMessageFor(model => model.Start_Time, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <input type="text" class="form-control" placeholder="Thời điểm kết thúc vụ mùa: tháng/ngày/năm" name="End_Time" required="" oninvalid="this.setCustomValidity('Thông tin này không được để trống')" oninput="this.setCustomValidity('')" value="@Model.End_Time"/>
                                            @*@Html.EditorFor(model => model.End_Time, new { htmlAttributes = new { @class = "form-control", @type = "datetime", @title = "Thời điểm kết thúc vụ mùa", placeholder = "Thời điểm kết thúc vụ mùa: tháng/ngày/năm" } })*@
                                            @Html.ValidationMessageFor(model => model.End_Time, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <input type="text" class="form-control" placeholder="Thời điểm bắt đầu thu hoạch: tháng/ngày/năm" name="Harvest_StartTime" required="" oninvalid="this.setCustomValidity('Thông tin này không được để trống')" oninput="this.setCustomValidity('')" value="@Model.Harvest_StartTime" />
                                            @*@Html.EditorFor(model => model.Harvest_StartTime, new { htmlAttributes = new { @class = "form-control", @type = "datetime", @title = "Thời điểm bắt đầu thu hoạch", placeholder = "Thời điểm bắt đầu thu hoạch: tháng/ngày/năm" } })*@
                                            @Html.ValidationMessageFor(model => model.Harvest_StartTime, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <input type="text" class="form-control" placeholder="Thời điểm kết thúc thu hoạch: tháng/ngày/năm" name="Harvest_EndTime" required="" oninvalid="this.setCustomValidity('Thông tin này không được để trống')" oninput="this.setCustomValidity('')" value="@Model.Harvest_EndTime" />
                                            @*@Html.EditorFor(model => model.Harvest_EndTime, new { htmlAttributes = new { @class = "form-control", @type = "datetime", @title = "Thời điểm kết thúc thu hoạch", placeholder = "Thời điểm kết thúc thu hoạch: tháng/ngày/năm" } })*@
                                            @Html.ValidationMessageFor(model => model.Harvest_EndTime, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <input type="number" class="form-control" placeholder="Sản lượng dự kiến" name="Quantity_Expected" onkeypress='return event.charCode != 69 && event.charCode != 101 && event.charCode != 45 && event.charCode != 43 && event.charCode != 46' required="" oninvalid="this.setCustomValidity('Thông tin này không được để trống')" oninput="this.setCustomValidity('')" value="@Model.Quantity_Expected">
                                        @*@Html.EditorFor(model => model.Quantity_Expected, new { htmlAttributes = new { @class = "form-control", @title = "Sản lượng dự kiến", placeholder = "Sản lượng dự kiến" } })*@
                                        @Html.ValidationMessageFor(model => model.Quantity_Expected, "", new { @class = "text-danger" })
                                        <div class="form-group">
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <h4><span class="label label-success">Đang Hoạt Động</span></h4>
                                        </div>
                                    </div>
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <label for="anhSanPham" style="color:aliceblue">Ảnh sản phẩm</label>
                                            <input type="file" class="form-control-file" onchange="readURL(this);" id="anhSanPham" name="ImageFile" style="color:aliceblue">
                                            <img style="max-width:180px; max-height:180px" id="blah" src="http://placehold.it/180" alt="your image" />
                                        </div>
                                    </div>

                                </div>

                                <center>
                                    <button type="submit" class="mu-readmore-btn">Cập Nhật</button>

                                    <button type="button" onclick="location.href = '@Url.Action("Index","ProductDetails", new { id = Model.FARM.Id_Farm })'" class="mu-readmore-btn">Quay Về</button>
                                </center>

                            </form>
                        </div>

                    }

                </div>
            </div>
        </div>
    </div>
</section>
<!-- End Reservation section -->
<!--S.Scripts For Image-->
<script>
    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#blah')
                    .attr('src', e.target.result);
            };

            reader.readAsDataURL(input.files[0]);
        }
    }
</script>
<!--E.Scripts For Image-->
